/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Game;

import java.awt.Color;
import java.util.ArrayList;
import java.lang.Math;
import java.util.Random;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;

public class TicTacToeFrame extends javax.swing.JFrame {
    private static String computerSymbol, playerSymbol;
    //private String player = "X"; //default
    public ArrayList<Integer> playerPosition, computerPosition;
    public ArrayList<String> tictactoe;
    public int playerIndex, bestMove, option, i, j, ind;

    public TicTacToeFrame(String playerSymbol, String computerSymbol) {
        initComponents();
        setSize(600,600);
        setLocationRelativeTo(null); //pops up at the center of the frame(screen)
        this.playerSymbol = playerSymbol;
        this.computerSymbol = computerSymbol;
        this.tictactoe = new ArrayList<String>(9);
        for (int i = 0; i < 9; i++){
            this.tictactoe.add(i, null);
        }
        this.playerPosition = new ArrayList<Integer>();
        this.computerPosition = new ArrayList<Integer>();
        this.playerIndex = playerIndex;
        this.bestMove = bestMove;
        this.option = option;
        this.i = i;
        this.j = j;
        this.ind = ind;

    }

    //created a method to determine whose turn it is
    private static String chooseSymbol(String playerSymbol){
        String computerSymbol;
        if(playerSymbol.equals("x")){
            computerSymbol = "o";
        }
        else{
            computerSymbol = "x";
        }
        return computerSymbol;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel_GridHolder = new javax.swing.JPanel();
        jPanel_1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel_2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel_3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel_4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel_5 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel_6 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jPanel_7 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel_8 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel_9 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe Game Play");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Place Holder for Scores");
        jPanel1.add(jLabel1, java.awt.BorderLayout.PAGE_END);

        jPanel_GridHolder.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_GridHolder.setLayout(new java.awt.GridLayout(3, 3, 1, 1));

        jPanel_1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_1.setLayout(new java.awt.BorderLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel_1.add(jButton1, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_1);

        jPanel_2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_2.setLayout(new java.awt.BorderLayout());

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel_2.add(jButton2, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_2);

        jPanel_3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_3.setLayout(new java.awt.BorderLayout());

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel_3.add(jButton3, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_3);

        jPanel_4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_4.setLayout(new java.awt.BorderLayout());

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel_4.add(jButton4, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_4);

        jPanel_5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_5.setLayout(new java.awt.BorderLayout());

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel_5.add(jButton5, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_5);

        jPanel_6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_6.setLayout(new java.awt.BorderLayout());

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel_6.add(jButton6, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_6);

        jPanel_7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_7.setLayout(new java.awt.BorderLayout());

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel_7.add(jButton7, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_7);

        jPanel_8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_8.setLayout(new java.awt.BorderLayout());

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel_8.add(jButton8, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_8);

        jPanel_9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_9.setLayout(new java.awt.BorderLayout());

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel_9.add(jButton9, java.awt.BorderLayout.CENTER);

        jPanel_GridHolder.add(jPanel_9);

        jPanel1.add(jPanel_GridHolder, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private ArrayList<String> getTicTacToeArray(){
        return tictactoe;
    }

    private void randPlay(int n){
        switch (n) {
            case 1:
                this.tictactoe.set(0, computerSymbol);
                jButton1.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton1.setForeground(Color.red);
                } else {
                    jButton1.setForeground(Color.blue);
                }
                break;
            case 2:
                this.tictactoe.set(1, computerSymbol);
                jButton2.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton2.setForeground(Color.red);
                } else {
                    jButton2.setForeground(Color.blue);
                }
                break;
            case 3:
                this.tictactoe.set(2, computerSymbol);
                jButton3.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton3.setForeground(Color.red);
                } else {
                    jButton3.setForeground(Color.blue);
                }
                break;
            case 4:
                this.tictactoe.set(3, computerSymbol);
                jButton4.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton4.setForeground(Color.red);
                } else {
                    jButton4.setForeground(Color.blue);
                }
                break;
            case 5:
                this.tictactoe.set(4, computerSymbol);
                jButton5.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton5.setForeground(Color.red);
                } else {
                    jButton5.setForeground(Color.blue);
                }
                break;
            case 6:
                this.tictactoe.set(5, computerSymbol);
                jButton6.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton6.setForeground(Color.red);
                } else {
                    jButton6.setForeground(Color.blue);
                }
                break;
            case 7:
                this.tictactoe.set(6, computerSymbol);
                jButton7.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton7.setForeground(Color.red);
                } else {
                    jButton7.setForeground(Color.blue);
                }
                break;
            case 8:
                this.tictactoe.set(7, computerSymbol);
                jButton8.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton8.setForeground(Color.red);
                } else {
                    jButton8.setForeground(Color.blue);
                }
                break;
            case 9:
                this.tictactoe.set(8, computerSymbol);
                jButton9.setText(computerSymbol);
                if (computerSymbol.equalsIgnoreCase("x")){
                    jButton9.setForeground(Color.red);
                } else {
                    jButton9.setForeground(Color.blue);
                }
                break;
        }
    }

    private void determineWin(){
        try {
        //horizontal win check
        for (int i = 0; i < 9; i += 3) {
            if (tictactoe.get(i) != null && tictactoe.get(i + 1) != null && tictactoe.get(i + 2) != null) {
                if (tictactoe.get(i).equalsIgnoreCase("x") && tictactoe.get(i + 1).equalsIgnoreCase("x") && tictactoe.get(i + 2).equalsIgnoreCase("x")) {
                    System.out.println("X wins the game!");
                    System.exit(0);
                } else if (tictactoe.get(i).toString().equalsIgnoreCase("o") && tictactoe.get(i + 1).toString().equalsIgnoreCase("o") && tictactoe.get(i + 2).toString().equalsIgnoreCase("o")) {
                    System.out.println("O wins the game!");
                    System.exit(0);
                }
            }
        }

        //vertical win check
        for (int i = 0; i < 3; i++) {
            if (tictactoe.get(i) != null && tictactoe.get(i + 3) != null && tictactoe.get(i + 6) != null) {
                if (tictactoe.get(i).toString().equalsIgnoreCase("x") && tictactoe.get(i + 3).toString().equalsIgnoreCase("x") && tictactoe.get(i + 6).toString().equalsIgnoreCase("x")) {
                    System.out.println("X wins the game! +10 points");
                    System.exit(0);
                } else if (tictactoe.get(i).toString().equalsIgnoreCase("o") && tictactoe.get(i + 3).toString().equalsIgnoreCase("o") && tictactoe.get(i + 6).toString().equalsIgnoreCase("o")) {
                    System.out.println("O wins the game! +10 points");
                    System.exit(0);
                }
            }
        }

        //left to right diagonal win check
        if (tictactoe.get(0) != null && tictactoe.get(4) != null && tictactoe.get(8) != null) {
            if (tictactoe.get(0).toString().equalsIgnoreCase("x") && tictactoe.get(4).toString().equalsIgnoreCase("x") && tictactoe.get(8).toString().equalsIgnoreCase("x")) {
                System.out.println("X wins the game! +10 points");
                System.exit(0);
            } else if (tictactoe.get(0).toString().equalsIgnoreCase("o") && tictactoe.get(4).toString().equalsIgnoreCase("o") && tictactoe.get(8).toString().equalsIgnoreCase("o")) {
                System.out.println("O wins the game! +10 points");
                System.exit(0);
            }
        }

        //right to left diaganol win check
        if (tictactoe.get(2) != null && tictactoe.get(4) != null && tictactoe.get(6) != null) {
            if (tictactoe.get(2).toString().equalsIgnoreCase("x") && tictactoe.get(4).toString().equalsIgnoreCase("x") && tictactoe.get(6).toString().equalsIgnoreCase("x")) {
                System.out.println("X wins the game! +10 points");
                System.exit(0);
            } else if (tictactoe.get(2).toString().equalsIgnoreCase("o") && tictactoe.get(4).toString().equalsIgnoreCase("o") && tictactoe.get(6).toString().equalsIgnoreCase("o")) {
                System.out.println("O wins the game! +10 points");
                System.exit(0);
            }
        }
        } catch (Exception e){}
    }

    private void minimaxAlg() {
        ArrayList<Integer> choosePosition = new ArrayList<Integer>(9);
        int optionTest = 1;

        switch(optionTest){

            case 1:
                if (playerIndex == 0){
                    choosePosition.add(0,1);
                    choosePosition.add(1,3);
                    choosePosition.add(2,4);
                    //System.out.println("choose from: " + choosePosition);
                }

                else if(playerIndex == 1){
                    choosePosition.add(0,0);
                    choosePosition.add(1,2);
                    choosePosition.add(2,4);
                    //System.out.println("choose from: " + choosePosition);
                }

                else if(playerIndex == 2){
                    choosePosition.add(0,1);
                    choosePosition.add(1,4);
                    choosePosition.add(2,5);
                    //System.out.println("choose from: " + choosePosition);
                }

                else if(playerIndex == 3){
                    choosePosition.add(0);
                    choosePosition.add(4);
                    choosePosition.add(6);
                    //System.out.println("choose from: " + choosePosition);
                }

                else if(playerIndex == 4){
                    choosePosition.add(1);
                    choosePosition.add(3);
                    choosePosition.add(5);
                    choosePosition.add(7);
                    //System.out.println("choose from: " + choosePosition);
                }

                else if(playerIndex == 5){
                    choosePosition.add(2);
                    choosePosition.add(4);
                    choosePosition.add(8);
                    //System.out.println("choose from: " + choosePosition);
                }

                else if(playerIndex == 6){
                    choosePosition.add(3);
                    choosePosition.add(4);
                    choosePosition.add(7);
                    //System.out.println("choose from: " + choosePosition);
                }

                else if(playerIndex == 7){
                    choosePosition.add(4);
                    choosePosition.add(6);
                    choosePosition.add(8);
                    //System.out.println("choose from: " + choosePosition);

                }

                else if(playerIndex == 8){
                    choosePosition.add(4);
                    choosePosition.add(5);
                    choosePosition.add(7);
                    //System.out.println("choose from: " + choosePosition);
                }

                this.i = choosePosition.size();
                this.j =(int)((Math.random()*(i-0)) + 0);
                this.bestMove = choosePosition.get(j);
                int temp = bestMove;
                int num = 0;
                while (this.tictactoe.get(bestMove) != null){
                    this.j =(int)((Math.random()*(i-0)) + 0);
                    //System.out.println("Random number = " + j);
                    this.bestMove = choosePosition.get(j);
                    num++;
                    if (num == 9){
                        this.bestMove = temp;
                        break;
                    }
                }
                //System.out.println("the best move is: " + bestMove);
                //this.tictactoe.add(bestMove, computerSymbol);
                //System.out.println("computer input = " + this.tictactoe.get(bestMove));
                this.computerPosition.add(bestMove);
                //System.out.println("computerArray = " + computerPosition);
                break;

            case 2:
                if((playerIndex == 0) && (playerIndex == 1)){
                }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton1.setText(playerSymbol);
        if(playerSymbol.equalsIgnoreCase("x")){
            this.tictactoe.set(0, "X");
            this.playerIndex = 0;
            jButton1.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if(playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(0, "O");
            this.playerIndex = 0;
            jButton1.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton2.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(1, "X");
            this.playerIndex = 1;
            jButton2.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if(playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(1, "O");
            this.playerIndex = 1;
            jButton2.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton3.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(2, "X");
            this.playerIndex = 2;
            jButton3.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if (playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(2, "O");
            this.playerIndex = 2;
            jButton3.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton4.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(3, "X");
            this.playerIndex = 3;
            jButton4.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if (playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(3, "O");
            this.playerIndex = 3;
            jButton4.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton5.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(4, "X");
            this.playerIndex = 4;
            jButton5.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if (playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(4, "O");
            this.playerIndex = 4;
            jButton5.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton6.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(5, "X");
            this.playerIndex = 5;
            jButton6.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if (playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(5, "O");
            this.playerIndex = 5;
            jButton6.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton7.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(6, "X");
            this.playerIndex = 6;
            jButton7.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if (playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(6, "O");
            this.playerIndex = 6;
            jButton7.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton8.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(7, "X");
            this.playerIndex = 7;
            jButton8.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if (playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(7, "O");
            this.playerIndex = 7;
            jButton8.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {
        jButton9.setText(playerSymbol);
        if(playerSymbol.equals("x")){
            this.tictactoe.set(8, "X");
            this.playerIndex = 8;
            jButton9.setForeground(Color.red);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        else if (playerSymbol.equalsIgnoreCase("o")){
            this.tictactoe.set(8, "O");
            this.playerIndex = 8;
            jButton9.setForeground(Color.blue);
            minimaxAlg();
            randPlay(bestMove+1);
        }
        determineWin();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        System.out.print("Hello! Select between symbol 'X' and 'O' to proceed with the game! Symbol: ");
        String userSymbol = in.nextLine();
        System.out.println("The symbol being used by player is: " + userSymbol.toUpperCase());
        String computerSymbol = chooseSymbol(userSymbol);

        TicTacToeFrame test = new TicTacToeFrame(userSymbol, computerSymbol);
        System.out.println("The symbol being used by the computer is: " + test.computerSymbol.toUpperCase());




        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTacToeFrame(userSymbol, computerSymbol).setVisible(true);
            }
        });

       // test.assignIndex();
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_1;
    private javax.swing.JPanel jPanel_2;
    private javax.swing.JPanel jPanel_3;
    private javax.swing.JPanel jPanel_4;
    private javax.swing.JPanel jPanel_5;
    private javax.swing.JPanel jPanel_6;
    private javax.swing.JPanel jPanel_7;
    private javax.swing.JPanel jPanel_8;
    private javax.swing.JPanel jPanel_9;
    private javax.swing.JPanel jPanel_GridHolder;
    // End of variables declaration
}
